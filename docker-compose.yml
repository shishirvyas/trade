version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: tradedb
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tradedb
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    networks:
      - app-network

  app:
    build:
      context: ./mongo/demo  # Look for Dockerfile in the root directory
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/tradedb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/tradedb
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
    depends_on:
      - mysql
      - mongodb
      - kafka
    ports:
      - "8081:8081"  # Expose the Spring Boot app on port 8081
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
